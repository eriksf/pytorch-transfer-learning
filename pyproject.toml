[project]
name = "pytorch-transfer-learning"
version = "0.1.0"
description = "A tool to train a CNN for image classification using transfer learning (from https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html)"
authors = [
    {name = "Erik Ferlanti",email = "eferlanti@tacc.utexas.edu"}
]
license = "BSD 3-Clause"
readme = "README.md"
requires-python = ">=3.12"
dynamic = [ "dependencies" ]

[project.scripts]
train = "pytorch_transfer_learning.train:main"
predict = "pytorch_transfer_learning.predict:main"

[project.urls]
repository = "https://github.com/eriksf/pytorch-transfer-learning"

[tool.poetry]
packages = [{include = "pytorch_transfer_learning"}]

[tool.poetry.dependencies]
torch = [
    {url = "https://download.pytorch.org/whl/cpu/torch-2.6.0-cp312-none-macosx_11_0_arm64.whl", markers = "sys_platform == 'darwin'"},
    {url = "https://download.pytorch.org/whl/cu126/torch-2.6.0%2Bcu126-cp312-cp312-linux_aarch64.whl", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'"},
    {url = "https://download.pytorch.org/whl/cu126/torch-2.6.0%2Bcu126-cp312-cp312-manylinux_2_28_x86_64.whl", markers = "sys_platform == 'linux' and platform_machine == 'x86_64'"},
]
torchvision = [
    {url = "https://download.pytorch.org/whl/cpu/torchvision-0.21.0-cp312-cp312-macosx_11_0_arm64.whl", markers = "sys_platform == 'darwin'"},
    {url = "https://download.pytorch.org/whl/cu126/torchvision-0.21.0-cp312-cp312-linux_aarch64.whl", markers = "sys_platform == 'linux' and platform_machine == 'aarch64'"},
    {url = "https://download.pytorch.org/whl/cu126/torchvision-0.21.0%2Bcu126-cp312-cp312-linux_x86_64.whl", markers = "sys_platform == 'linux' and platform_machine == 'x86_64'"},
]
scipy = "^1.15.2"
matplotlib = "^3.10.1"
rich = "^13.9.4"
click = "^8.1.8"
click-loglevel = "^0.6.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
ruff = "^0.11.1"

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu126"
priority = "supplemental"

[tool.ruff]
exclude = [".git", ".ruff_cache", ".vscode"]
line-length = 300

[tool.ruff.lint]
select = ["E", "F", "I"]
fixable = ["ALL"]
unfixable = ["F401"]

[tool.pytest.ini_options]
addopts = "--verbose --cov=pytorch_transfer_learning"

[tool.poetry_bumpversion.file."pytorch_transfer_learning/version.py"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
